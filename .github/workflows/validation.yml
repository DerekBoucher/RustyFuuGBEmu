on:
  pull_request:
    branches:
      - main

name: Validation

jobs:
  check-cargo-project-version:
    name: Check Cargo project version
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get latest tag
      id: get_latest_tag
      run: |
        latest_tag=$(git describe --tags --always $(git rev-list --tags --max-count=1))
        echo "latest_tag=$latest_tag" >> $GITHUB_ENV

    - name: Extract version from Cargo.toml
      id: extract_version
      run: |
        cargo_version=$(grep '^version' Cargo.toml | sed 's/version = "\(.*\)"/\1/')
        echo "cargo_version=$cargo_version" >> $GITHUB_ENV

    - name: Check if next version is correct
      run: |
        latest_tag=${{ env.latest_tag }}
        cargo_version=${{ env.cargo_version }}
        
        IFS='.' read -r -a latest_version_parts <<< "${latest_tag#v}"
        IFS='.' read -r -a cargo_version_parts <<< "$cargo_version"

        latest_major=$((${latest_version_parts[0]}))
        latest_minor=$((${latest_version_parts[1]}))
        latest_patch=$((${latest_version_parts[2]}))

        next_major=$(printf "%d.0.0" $((${latest_major} + 1)))
        next_minor=$(printf "%d.%d.0" $latest_major $((${latest_minor} + 1)))
        next_patch=$(printf "%d.%d.%d" $latest_major $latest_minor $((${latest_patch} + 1)))


        if [[ "$cargo_version" != "$next_major" && "$cargo_version" != "$next_minor" && "$cargo_version" != "$next_patch" ]]; then
        echo "Version in Cargo.toml is not any potential next version: $next_major, $next_minor, $next_patch"
          exit 1
        fi
        
        echo "Version in Cargo.toml is correct."
        exit 0
